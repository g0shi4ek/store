services:
  store_server:
    build: ./backend
    container_name: go_backend
    restart: unless-stopped
    env_file:
      - ./backend/.env
    ports:
      - "8001:8080"  # (8001 внешний, 8080 внутренний)
    depends_on:
      db:
        condition: service_healthy
    networks:
      - store_network

  db:
    image: postgres:15-alpine
    container_name: postgres_db
    restart: unless-stopped
    env_file:
      - ./backend/.env
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - store_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

networks:
  store_network:
    driver: bridge